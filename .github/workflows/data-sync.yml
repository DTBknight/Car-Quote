name: Data Sync Task

on:
  schedule:
    # 每周一凌晨执行选项：
    # 1. 每周一凌晨0点 (UTC时间，即北京时间上午8点)
    # 2. 每周一凌晨2点 (UTC时间，即北京时间上午10点) 
    # 3. 每周一凌晨6点 (UTC时间，即北京时间下午2点)
    # 当前设置：每周一凌晨0点 (UTC时间)
    - cron: '0 0 * * 1'
  workflow_dispatch: # 允许手动触发

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: 设置Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: data-processor/package-lock.json
        
    - name: Install Chrome Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg2
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Install Dependencies
      run: |
        cd data-processor
        npm ci
        
    - name: Execute Data Sync
      run: |
        cd data-processor
        node index-sync.js
      env:
        # Set environment variables
        NODE_ENV: production
        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
        
    - name: Validate Data Integrity
      run: |
        cd data-processor
        node scripts/validate.js
        
    - name: Generate Summary
      run: |
        cd data-processor
        if [ -f "weekly-execution.log" ]; then
          echo "## 数据同步结果" >> $GITHUB_STEP_SUMMARY
          echo "- 执行时间: $(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_STEP_SUMMARY
          echo "- 日志文件: weekly-execution.log" >> $GITHUB_STEP_SUMMARY
          
          # 查找最新的报告文件
          latest_report=$(ls -t weekly-report-*.json 2>/dev/null | head -1)
          if [ -n "$latest_report" ]; then
            echo "- 执行报告: $latest_report" >> $GITHUB_STEP_SUMMARY
            success_rate=$(jq -r '.successRate' "$latest_report" 2>/dev/null || echo "N/A")
            echo "- 成功率: $success_rate" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "## 数据同步结果" >> $GITHUB_STEP_SUMMARY
          echo "- 执行失败: 未找到日志文件" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Commit Updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        echo "Checking file status..."
        git status --porcelain
        echo "Adding data files..."
        git add data/*.json
        echo "Adding weekly logs and reports..."
        git add -f data-processor/weekly-execution.log data-processor/weekly-report-*.json data-processor/weekly-progress.json
        echo "Checking for changes..."
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          echo "Committing changes..."
          git commit -m "📊 Data sync update - $(date '+%Y-%m-%d')"
          echo "Pushing to remote repository..."
          git push
        fi 