name: 数据同步任务

on:
  schedule:
    # 每天凌晨2点运行 (UTC时间)
    - cron: '0 18 * * *'
  workflow_dispatch: # 允许手动触发

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: data-processor/package-lock.json
        
    - name: 显示系统信息
      run: |
        echo "Node.js版本: $(node --version)"
        echo "npm版本: $(npm --version)"
        echo "系统信息: $(uname -a)"
        echo "内存信息: $(free -h)"
        
    - name: 安装Chrome依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg2
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        echo "Chrome版本: $(google-chrome --version)"
        
    - name: 进入工作目录
      run: |
        cd data-processor
        pwd
        ls -la
        
    - name: 安装依赖
      run: |
        cd data-processor
        npm ci --verbose
        echo "依赖安装完成"
        
    - name: 验证依赖
      run: |
        cd data-processor
        node --version
        npm list --depth=0
        
    - name: 环境测试
      run: |
        cd data-processor
        node debug-github-actions.js
        
    - name: 执行数据同步
      run: |
        cd data-processor
        node index-production.js
      env:
        # 设置环境变量
        NODE_ENV: production
        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
        
    - name: 验证数据完整性
      run: |
        cd data-processor
        node scripts/validate.js
        
    - name: 提交更新
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        echo "检查文件状态..."
        git status --porcelain
        echo "添加数据文件..."
        git add data/*.json
        echo "检查是否有变更..."
        if git diff --staged --quiet; then
          echo "没有变更需要提交"
        else
          echo "提交变更..."
          git commit -m "📊 数据同步更新 - $(date)"
          echo "推送到远程仓库..."
          git push
        fi 